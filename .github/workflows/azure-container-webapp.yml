# This workflow will build and push a Docker container to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-custom-container?tabs=dotnet&pivots=container-linux
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Create a GitHub Personal access token with "repo" and "read:packages" permissions.
#
# 4. Create three app settings on your Azure Web app:
#       DOCKER_REGISTRY_SERVER_URL: Set this to "https://ghcr.io"
#       DOCKER_REGISTRY_SERVER_USERNAME: Set this to the GitHub username or organization that owns the repository
#       DOCKER_REGISTRY_SERVER_PASSWORD: Set this to the value of your PAT token from the previous step
#
# 5. Change the value for the AZURE_WEBAPP_NAME.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy a container to an Azure Web App

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Run python script
        run: python ./change_version.py
      - name: set email
        run: git config --global user.email "michalziober08@gmail.com"
      - name: set name
        run: git config --global user.name "Micha≈Ç Ziober"
      - name: stage changed file
        run: git add -u
      - name: commit changed file
        run: git commit -m "Increment version"
      - name: fetch from master
        run: git fetch origin master
      - name: push code to master
        run: git push origin HEAD:master
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: 6.0.100
      - name: Restore dependences
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Publish
        run: dotnet publish mwo4.csproj -c Release -o ${{ env.DOTNET_ROOT }}/api
      - name: ls
        run: tree ${{ env.DOTNET_ROOT }}/api
      - name: upload artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: mwo-artifact
          path: ${{ env.DOTNET_ROOT }}/api
    
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'DEV'
      url: ${{ steps.deploy-to-azure.outputs.webapp-url }}
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: mwo-artifact
      - name: Azure WebApp
        id: deploy-to-azure
        uses: Azure/webapps-deploy@v2
        with:
          app-name: 'DEVmwo'
          publish-profile: ${{ secrets.DEV_MWO }}
          
  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment:
      name: 'PROD'
      url: ${{ steps.deploy-to-azure.outputs.webapp-url }}
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: mwo-artifact
      - name: Azure WebApp
        id: deploy-to-azure
        uses: Azure/webapps-deploy@v2
        with:
          app-name: 'PRODmwo'
          publish-profile: ${{ secrets.PROD_MWO }}
            
